[
	{"ID":"L.I.A.M.", "width":95,"length":140,"NumberOfSensors":2,"SensorSpacing":12,"BodyColour":"2070d0","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold)\r\n{ // WHITE, BLACK\r\nSet_PWM(0, 8000); // Motor 0 fast\r\nSet_PWM(1, 700); // Motor 1 stop\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold)\r\n{ // BLACK, WHITE\r\nSet_PWM(0, 700 ); // Motor 0 stop\r\nSet_PWM(1,8000); // Motor 1 fast\r\n\r\n}\r\nelse if(an[0] > black_threshold && an[1] > black_threshold)\r\n{ // BLACK, BLACK\r\nSet_PWM(0, 8191); // Motor 0 medium\r\nSet_PWM(1,8191); // Motor 1 medium\r\n     \r\n}\r\n}\t\t\t"},
	{"ID":"SAIL", "width":95,"length":119,"NumberOfSensors":3,"SensorSpacing":15,"BodyColour":"2070d0","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) // white black white\r\n{\r\n         \r\nSet_PWM(0, 8191); // Motor 0 fast\r\nSet_PWM(1, 8191); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold)  // black white white\r\n{\r\n           \r\nSet_PWM(0, 1500); // Motor 0 stop\r\nSet_PWM(1, 8000); //motor 1 medium ish\r\n}\r\nelse if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) // white white black\r\n{\r\n             \r\nSet_PWM(0, 8000); // left on\r\nSet_PWM(1, 1500); // right off\r\n}\r\nelse if (an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) // black black white\r\n{\r\n           \r\n    Set_PWM(0, 1500);\r\n    Set_PWM(1, 7000);\r\n}\r\nelse if (an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) // white black black\r\n{\r\n        \r\n    Set_PWM(0, 7000);\r\n    Set_PWM(1, 1500);\r\n}\r\n\r\n}"},
	{"ID":"Khubza", "width":95,"length":100,"NumberOfSensors":4,"SensorSpacing":10,"BodyColour":"2070d0","WheelColour":"444444","LEDColour":"red","Code":"\t\t\r\n\t\t\tvoid RobotControl(){\r\n if ( an[1] <= black_threshold && an[2] > black_threshold)\r\n{\r\nSet_PWM(0,8191);\r\nSet_PWM(1,6000); \r\n} else if (an[1] > black_threshold && an[2] <= black_threshold)\r\n{\r\nSet_PWM(0,6000);\r\nSet_PWM(1,8191);\r\n} else if (an[1] > black_threshold && an[2] > black_threshold)\r\n{\r\nSet_PWM(0,8191);\r\nSet_PWM(1,8191);\r\n}\r\n else if ( an[0] <= black_threshold && an[3] > black_threshold)\r\n{\r\nSet_PWM(0,8191);\r\nSet_PWM(1,0); \r\n} else if (an[0] > black_threshold && an[3] <= black_threshold)\r\n{\r\nSet_PWM(0,0);\r\nSet_PWM(1,8191);\r\n}\r\n}\r\n\r\n"},
	{"ID":"SAIL", "width":95,"length":119,"NumberOfSensors":3,"SensorSpacing":20,"BodyColour":"2070d0","WheelColour":"444444","LEDColour":"red","Code":"void RobotControl()\r\n{\r\nif(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold) // white black white\r\n{\r\nSet_PWM(0, 8191); // Motor 0 fast\r\nSet_PWM(1, 8191); // Motor 1 fast\r\n}\r\nelse if(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold)  // black white white\r\n{\r\nSet_PWM(0, 0); // Motor 0 stop\r\nSet_PWM(1, 8000); //motor 1 medium ish\r\n}\r\nelse if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold) // white white black\r\n{\r\nSet_PWM(0, 8000); // left on\r\nSet_PWM(1, 0); // right off\r\n}\r\nelse if (an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold) // black black white\r\n{\r\n    Set_PWM(0, 6500);\r\n    Set_PWM(1, 0);\r\n}\r\nelse if (an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold) // white black black\r\n{\r\n    Set_PWM(0, 0);\r\n    Set_PWM(1, 6500);\r\n}\r\n\r\nint a0[2];\r\n\r\n{\r\n    //algorithm for memory sensors\r\n    if(an[0] <= black_threshold && an[1] > black_threshold && an[2] <= black_threshold); // white black white\r\n    else if(an[0] > black_threshold && an[1] <= black_threshold && an[2] <= black_threshold); // black white white\r\n    else if(an[0] <= black_threshold && an[1] <= black_threshold && an[2] > black_threshold);// white white black\r\n    else if (an[0] > black_threshold && an[1] > black_threshold && an[2] <= black_threshold);// black black white\r\n    else if (an[0] <= black_threshold && an[1] > black_threshold && an[2] > black_threshold);// white black black\r\n   \r\n    for(int n = 0; n > 5; n++) {\r\n        a0[n] = an[n];\r\n    }\r\n}\r\n\r\n}"}
]
